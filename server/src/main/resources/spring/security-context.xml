<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-3.2.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <context:component-scan base-package="co.radomski.setenta.server.security"/>

    <bean id="securityFilterChain"
          class="co.radomski.setenta.server.security.SecurityFilterChainProxy">
        <security:filter-chain-map path-type="ant">
            <security:filter-chain pattern="/**"
                                   filters="securityContextPersistenceFilter,
                                   authenticationHeaderProcessingFilter,
                                   usernamePasswordAuthenticationFilter,
                                   logoutFilter,
                                   exceptionTranslationFilter,
                                   filterSecurityInterceptor"/>
        </security:filter-chain-map>
        <property name="excludeList">
            <list>
                <value>/login</value>
                <value>/register/**</value>
            </list>
        </property>
    </bean>

    <bean id="securityContextPersistenceFilter"
          class="co.radomski.setenta.server.security.LogoutSecurityContextPersistenceFilter">
        <constructor-arg index="0">
            <bean class='org.springframework.security.web.context.HttpSessionSecurityContextRepository'>
                <property name='allowSessionCreation' value='false'/>
            </bean>
        </constructor-arg>
        <property name="logoutPath" value="${logout.url}"/>
    </bean>

    <bean id="authenticationHeaderProcessingFilter"
          class="co.radomski.setenta.server.security.AuthenticationHeaderProcessingFilter"
          parent="abstractAuthenticationProcessingFilter"/>

    <bean id="abstractAuthenticationProcessingFilter"
          class="co.radomski.setenta.server.security.AuthenticationProcessingFilter"
          abstract="true">
        <property name="marshaller" ref="tokenMarshaller"/>
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="tokenName" value="${authTokenName}"/>
    </bean>

    <bean id="usernamePasswordAuthenticationFilter"
          class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="filterProcessesUrl" value="${auth.url}"/>
        <property name="usernameParameter" value="${username.auth.key}"/>
        <property name="passwordParameter" value="${password.auth.key}"/>
        <property name="authenticationFailureHandler">
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                <!--<property name="defaultFailureUrl" value="${login.failure.url}"/>-->
            </bean>
        </property>
        <property name="authenticationSuccessHandler" ref="loginSuccessHandler"/>
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>

    <bean id="loginSuccessHandler" class="co.radomski.setenta.server.security.LoginSuccessHandler">
        <property name="requestCache">
            <bean class="org.springframework.security.web.savedrequest.NullRequestCache"/>
        </property>
        <property name="cookieTimeout" value="${cookie.timeout}"/>
        <property name="cookieName" value="${authTokenName}"/>
    </bean>

    <bean id="authenticationManager"
          class="org.springframework.security.authentication.ProviderManager">
        <constructor-arg index="0">
            <list>
                <bean class="co.radomski.setenta.server.security.TokenAuthenticationProvider">
                    <property name="userDetailsService" ref="userDetailsService"/>
                    <property name="userCache" ref="userDetailsCache"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="tokenMarshaller" class="co.radomski.setenta.server.security.token.TokenMarshaller">
        <property name="tokenConverter">
            <bean class="co.radomski.setenta.server.security.token.converter.UserTokenConverter"/>
        </property>
        <property name="tokenCrypto" ref="basicEncryptor"/>
        <property name="tokenEncoder">
            <bean class="co.radomski.setenta.server.security.token.encoder.Base64TokenEncoder"/>
        </property>
    </bean>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"/>

    <bean id="userDetailsCache"
          class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">
        <property name="cache">
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <property name="cacheManager" ref="ehCacheManager"/>
                <property name="cacheName" value="userDetailsCache"/>
            </bean>
        </property>
    </bean>

    <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
          destroy-method="destroy">
        <property name="configLocation" value="classpath:ehcache/security-ehcache.xml"/>
    </bean>

    <bean id="filterSecurityInterceptor"
          class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="alwaysReauthenticate" value="false"/>
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="accessDecisionManager" ref="accessDecisionManager"/>
        <property name="securityMetadataSource">
            <security:filter-security-metadata-source lowercase-comparisons="false" path-type="ant">
                <security:intercept-url pattern="/api/rest/**" access="ROLE_ADMIN"/>
                <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
            </security:filter-security-metadata-source>
        </property>
    </bean>

    <bean id="accessDecisionManager"
          class="org.springframework.security.access.vote.AffirmativeBased">
        <constructor-arg index="0">
            <list>
                <bean class="org.springframework.security.access.vote.RoleVoter"/>
                <bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="exceptionTranslationFilter"
          class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <constructor-arg index="0">
            <bean class="co.radomski.setenta.server.security.Http401UnauthorizedEntryPoint">
                <property name="loginPage" value="/"/>
            </bean>
        </constructor-arg>
        <property name="accessDeniedHandler">
            <bean class="co.radomski.setenta.server.security.Http403ForbiddenAccessDeniedHandler"/>
        </property>
    </bean>

    <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg index="0" value="/"/>
        <constructor-arg index="1">
            <bean class="co.radomski.setenta.server.security.LogoutSessionHandler">
                <constructor-arg index="0" value="${authTokenName}"/>
            </bean>
        </constructor-arg>
        <property name="filterProcessesUrl" value="${logout.url}"/>
    </bean>
</beans>