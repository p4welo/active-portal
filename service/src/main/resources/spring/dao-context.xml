<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:utils="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
				http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

    <context:annotation-config/>
    <tx:annotation-driven order="1000"/>

    <context:component-scan base-package="pl.ap.dao.impl"/>

    <bean id="validatorFactory" class="javax.validation.Validation" factory-method="buildDefaultValidatorFactory"/>

    <bean id="validator" factory-bean="validatorFactory" factory-method="getValidator"/>

    <bean class="pl.ap.domain.validation.UniqueConstraintValidator">
        <property name="sessionProvider" ref="sessionProvider"/>
    </bean>

    <bean id="sessionProvider" class="pl.ap.domain.validation.impl.SessionProviderImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="namingStrategy" class="org.hibernate.cfg.DefaultComponentSafeNamingStrategy"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${datasource.driverClassName}"/>
        <property name="url" value="${datasource.url}"/>
        <property name="username" value="${datasource.username}"/>
        <property name="password" value="${datasource.password}"/>
        <property name="validationQuery" value="${datasource.validationQuery}"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnReturn" value="true"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" ref="sessionFactoryDomainToScan"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.showSql}</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <utils:list id="sessionFactoryDomainToScan">
        <value>pl.ap.domain</value>
    </utils:list>

    <utils:list id="sessionFactoryAnnotatedClasses">
    </utils:list>
</beans>